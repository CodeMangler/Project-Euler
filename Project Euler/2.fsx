#light

(*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
Find the sum of all the even-valued terms in the sequence which do not exceed four million.
*)

let even n = (n % 2 = 0) ;;

// crude fib
let rec fibonacci n = 
    match n with
    | 0 -> 1
    | 1 -> 2
    | _ -> fibonacci n + fibonacci n - 1 ;;


// crude series    
let rec fibonacci_series limit series = 
    if(series = []) then
        fibonacci_series limit [2;1;]
    else 
        let next_fib = (List.hd series) + (List.hd(List.tl series))
        if(next_fib > limit) then
            (series)
        else
            fibonacci_series limit (next_fib :: series)
;;

let sum_even acc x = 
    if ( even x ) then
        (acc + x)
    else
        acc ;;

let sum_of_even_valued_fibonacci_terms limit = 
    List.fold_left sum_even 0 (fibonacci_series limit []);;


// Correct answer: 4613732
// i.e. sum_of_even_valued_fibonacci_terms 4000000;; = 4613732
